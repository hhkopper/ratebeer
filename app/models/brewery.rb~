class Brewery < ActiveRecord::Base

	include RatingAverage

	has_many :beers, dependent: :destroy
	has_many :ratings, through: :beers

	validates :name, length: { minimum: 1}
	validates :year, numericality: { greater_than_or_equal_to: 1042,
					only_integer: true}
	validate :year_not_greater_than_this_year

	scope :active, -> {where active:true}
	scope :retired, -> {where active:[nil, false]}

	def year_not_greater_than_this_year
		if year > Time.now.year
			errors.add(:year, " can't be greater than #{Time.now.year}")
		end
	end

	def print_report
		puts self.name
		puts "established at year #{self.year}"
		puts "number of beers #{self.beers.count}"
	end

	def restart
		self.year = 2015
		puts "changed year to #{year}"
	end

	def self.top(n)
		sorted_by_rating_in_desc_order = Brewery.all.sort_by{ |b| -(b.average_rating||0)}
	end

end
